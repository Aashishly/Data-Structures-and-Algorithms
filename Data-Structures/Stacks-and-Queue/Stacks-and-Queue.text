Stack:
    A stack is a linear data structure in which the insertion of a new element and removal of an existing element takes place at the top of the stack.
    It follows the principle LIFO (Last In First Out) in which the insertion and deletion take place from one side known as a top.

Basic Operations on Stack
    1. push() to insert an element into the stack
    2. pop() to remove an element from the stack
    3. top() Returns the top element of the stack.
    4. isEmpty() returns true if stack is empty else false.
    5. size() returns the size of stack.

Implemention of a stack:
    1. Using array
    2. Using linked list

Advantages of array implementation:
    1. Easy to implement.
    2. Memory is saved as pointers are not involved.

Disadvantages of array implementation:
    1. It is not dynamic
    2. The total size of the stack must be defined.

Advantages of Linked List implementation:
    1. The linked list implementation of a stack can grow and shrink according to the needs at runtime.
    2. It is used in many virtual machines like JVM.

Disadvantages of Linked List implementation:
    1. Requires extra memory due to the involvement of pointers.
    2. Random accessing is not possible in stack.

Application of Stack:
    1. Undo/Redo operations
    2. Backtracking Algorithms
    3. Stack is used to evaluate expressions in infix, postfix, and prefix notations.
    4. Web browsers use stacks to keep track of the web pages you visit.


